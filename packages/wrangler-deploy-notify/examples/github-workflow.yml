name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main
      - develop
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Worker
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for git info
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DEPLOY_NOTIFY_URL: ${{ secrets.DEPLOY_NOTIFY_URL }}
          DEPLOY_NOTIFY_TOKEN: ${{ secrets.DEPLOY_NOTIFY_TOKEN }}
        run: |
          npx wrangler-deploy-notify --env staging
      
      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DEPLOY_NOTIFY_URL: ${{ secrets.DEPLOY_NOTIFY_URL }}
          DEPLOY_NOTIFY_TOKEN: ${{ secrets.DEPLOY_NOTIFY_TOKEN }}
        run: |
          npx wrangler-deploy-notify --env production
      
      - name: Deploy Release
        if: github.event_name == 'release'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DEPLOY_NOTIFY_URL: ${{ secrets.DEPLOY_NOTIFY_URL }}
          DEPLOY_NOTIFY_TOKEN: ${{ secrets.DEPLOY_NOTIFY_TOKEN }}
        run: |
          npx wrangler-deploy-notify \
            --env production \
            --tag ${{ github.event.release.tag_name }}

  # Optional: Deploy multiple workers
  deploy-multiple:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker:
          - name: api-worker
            dir: ./workers/api
            env: production
          - name: auth-worker
            dir: ./workers/auth
            env: production
          - name: image-worker
            dir: ./workers/image
            env: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        working-directory: ${{ matrix.worker.dir }}
        run: npm ci
      
      - name: Deploy ${{ matrix.worker.name }}
        working-directory: ${{ matrix.worker.dir }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DEPLOY_NOTIFY_URL: ${{ secrets.DEPLOY_NOTIFY_URL }}
          DEPLOY_NOTIFY_TOKEN: ${{ secrets.DEPLOY_NOTIFY_TOKEN }}
        run: |
          npx wrangler-deploy-notify \
            --env ${{ matrix.worker.env }} \
            --project-name ${{ matrix.worker.name }}